{"version":3,"file":"material-slider.umd.js","sources":["../../../../../../src/material/slider/slider.ts","../../../../../../src/material/slider/slider-module.ts","../../../../../../src/material/slider/public-api.ts","../../../../../../src/material/slider/index.ts"],"names":["normalizePassiveListenerOptions","NG_VALUE_ACCESSOR","forwardRef","mixinTabIndex","mixinColor","mixinDisabled","__extends","EventEmitter","Subscription","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","Optional","Attribute","Inject","ANIMATION_MODULE_TYPE","NgZone","Input","Output","ViewChild","NgModule","CommonModule","MatCommonModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {Subscription} from 'rxjs';\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number | null;\n}\n\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSliderMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof MatSliderBase =\n        mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n@Component({\n  selector: 'mat-slider',\n  exportAs: 'matSlider',\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n\n    // On Safari starting to slide temporarily triggers text selection mode which\n    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n    '(selectstart)': '$event.preventDefault()',\n    'class': 'mat-slider',\n    'role': 'slider',\n    '[tabIndex]': 'tabIndex',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    // Class binding which is only used by the test harness as there is no other\n    // way for the harness to detect if mouse coordinates need to be inverted.\n    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlider extends _MatSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\n  /** Whether the slider is inverted. */\n  @Input()\n  get invert(): boolean { return this._invert; }\n  set invert(value: boolean) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  private _invert = false;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _max: number = 100;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _min: number = 0;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number { return this._step; }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _step: number = 1;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean { return this._thumbLabel; }\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\n  private _thumbLabel: boolean = false;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() { return this._tickInterval; }\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: 'auto' | number = 0;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number | null {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v: number | null) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v);\n\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _value: number | null = null;\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** Whether the slider is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical = false;\n\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  /** The value to be used for display purposes. */\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value!);\n    }\n\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  /** set focus to the host element */\n  focus(options?: FocusOptions) {\n    this._focusHostElement(options);\n  }\n\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /** The percentage of the slider that coincides with the value. */\n  get percent(): number { return this._clamp(this._percent); }\n  private _percent: number = 0;\n\n  /**\n   * Whether or not the thumb is sliding.\n   * Used to determine if there should be a transition for the thumb and fill track.\n   */\n  _isSliding: boolean = false;\n\n  /**\n   * Whether or not the slider is active (clicked or sliding).\n   * Used to shrink and grow the thumb as according to the Material Design spec.\n   */\n  _isActive: boolean = false;\n\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n\n  /** Whether the slider is at its minimum value. */\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n\n  /** CSS styles for the track background element. */\n  get _trackBackgroundStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the track fill element. */\n  get _trackFillStyles(): { [key: string]: string } {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n\n  /** CSS styles for the ticks container element. */\n  get _ticksContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n\n  /** CSS styles for the ticks element. */\n  get _ticksStyles(): { [key: string]: string } {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let side = this.vertical ?\n          (this._invertAxis ? 'Bottom' : 'Top') :\n          (this._invertAxis ? 'Right' : 'Left');\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n\n  get _thumbContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset =\n        (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n\n  /** The size of a tick interval as a percentage of the size of the track. */\n  private _tickIntervalPercent: number = 0;\n\n  /** The dimensions of the slider. */\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** Decimal places to round to, based on the step amount. */\n  private _roundToDecimal: number;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** The value of the slider when the slide start event fires. */\n  private _valueOnSlideStart: number | null;\n\n  /** Position of the pointer when the dragging started. */\n  private _pointerPositionOnStart: {x: number, y: number} | null;\n\n  /** Reference to the inner slider wrapper element. */\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\n\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n\n  /** The language direction for this slider element. */\n  private _getDirection() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n\n  /** Keeps track of the last pointer event that was captured by the slider. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Attribute('tabindex') tabIndex: string,\n              // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              // @breaking-change 9.0.0 `_ngZone` parameter to be made required.\n              private _ngZone?: NgZone) {\n    super(elementRef);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    this._runOutsizeZone(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  ngOnInit() {\n    this._focusMonitor\n        .monitor(this._elementRef, true)\n        .subscribe((origin: FocusOrigin) => {\n          this._isActive = !!origin && origin !== 'keyboard';\n          this._changeDetectorRef.detectChanges();\n        });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (this.disabled || hasModifierKey(event)) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    this._isSliding = false;\n  }\n\n  /** Called when the user has put their pointer down on the slider. */\n  private _pointerDown = (event: TouchEvent | MouseEvent) => {\n    // Don't do anything if the slider is disabled or the\n    // user is using anything other than the main mouse button.\n    if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._runInsideZone(() => {\n      const oldValue = this.value;\n      const pointerPosition = getPointerPositionOnPage(event);\n      this._isSliding = true;\n      this._lastPointerEvent = event;\n      event.preventDefault();\n      this._focusHostElement();\n      this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n      this._bindGlobalEvents(event);\n      this._focusHostElement();\n      this._updateValueFromPosition(pointerPosition);\n      this._valueOnSlideStart = this.value;\n      this._pointerPositionOnStart = pointerPosition;\n\n      // Emit a change and input event if the value changed.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n        this._emitChangeEvent();\n      }\n    });\n  }\n\n  /**\n   * Called when the user has moved their pointer after\n   * starting to drag. Bound on the document level.\n   */\n  private _pointerMove = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      // Prevent the slide from selecting anything else.\n      event.preventDefault();\n      const oldValue = this.value;\n      this._lastPointerEvent = event;\n      this._updateValueFromPosition(getPointerPositionOnPage(event));\n\n      // Native range elements always emit `input` events when the value changed while sliding.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n      }\n    }\n  }\n\n  /** Called when the user has lifted their pointer. Bound on the document level. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      const pointerPositionOnStart = this._pointerPositionOnStart;\n      const currentPointerPosition = getPointerPositionOnPage(event);\n\n      event.preventDefault();\n      this._removeGlobalEvents();\n      this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n      this._isSliding = false;\n\n      if (this._valueOnSlideStart != this.value && !this.disabled &&\n          pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n          pointerPositionOnStart.y !== currentPointerPosition.y)) {\n        this._emitChangeEvent();\n      }\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    if (typeof document !== 'undefined' && document) {\n      const body = document.body;\n      const isTouch = isTouchEvent(triggerEvent);\n      const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n      const endEventName = isTouch ? 'touchend' : 'mouseup';\n      body.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n      body.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n      if (isTouch) {\n        body.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n      }\n    }\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    if (typeof document !== 'undefined' && document) {\n      const body = document.body;\n      body.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n      body.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n      body.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n      body.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n      body.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  private _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  /** Emits a change event if the current value is different from the last emitted value. */\n  private _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  /** Emits an input event when the current value is different from the last emitted value. */\n  private _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  private _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(value = this.value): MatSliderChange {\n    let event = new MatSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  /** Calculates the percentage of the slider that a value is. */\n  private _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  /** Calculates the value a percentage of the slider corresponds to. */\n  private _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  /** Return a number between two numbers. */\n  private _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  private _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  private _focusHostElement(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the native element. */\n  private _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /** Runs a callback inside of the NgZone, if possible. */\n  private _runInsideZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.run(fn) : fn();\n  }\n\n  /** Runs a callback outside of the NgZone, if possible. */\n  private _runOutsizeZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_invert: BooleanInput;\n  static ngAcceptInputType_max: NumberInput;\n  static ngAcceptInputType_min: NumberInput;\n  static ngAcceptInputType_step: NumberInput;\n  static ngAcceptInputType_thumbLabel: BooleanInput;\n  static ngAcceptInputType_tickInterval: NumberInput;\n  static ngAcceptInputType_value: NumberInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n  return {x: point.clientX, y: point.clientY};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatSlider} from './slider';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n})\nexport class MatSliderModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './slider-module';\nexport * from './slider';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}